<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Kirankumar Ambati]]></title><description><![CDATA[Kiran writes his learnings out here]]></description><link>https://kirankumarambati.me/blog</link><generator>RSS for Node</generator><lastBuildDate>Wed, 27 Feb 2019 05:00:09 GMT</lastBuildDate><item><title><![CDATA[NVM To The Rescue]]></title><description><![CDATA[Node has become a part of most of our coding lives. But if we are working on latest technologies like React and at the same time working on…]]></description><link>https://kirankumarambati.me/blog/nvm-setup/</link><guid isPermaLink="false">https://kirankumarambati.me/blog/nvm-setup/</guid><pubDate>Tue, 26 Feb 2019 11:31:52 GMT</pubDate><content:encoded>&lt;p&gt;Node has become a part of most of our coding lives. But if we are working on latest technologies like React and at the same time working on your legacy code, you might have noticed that you have switch between two versions of Node. For instance, I was working with node v6.10.2 for my company project and node v10.15.0 for my personal learnings. I used to uninstall and install those versions based on my requirements until I found NVM.&lt;/p&gt;
&lt;h2&gt;NVM - Node Version Manager&lt;/h2&gt;
&lt;p&gt;NVM stands for “Node Version Manager”. NVM helps us to handle multiple versions of node very easily by giving us the ability to switch between them based on our requirement.&lt;/p&gt;
&lt;h4&gt;Let us look at the setup&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installing nvm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For installing &lt;em&gt;nvm&lt;/em&gt;, head over &lt;a href=&quot;https://github.com/coreybutler/nvm-windows/releases&quot;&gt;here&lt;/a&gt; and download the latest stable nvm setup file (&lt;code class=&quot;language-text&quot;&gt;nvm-setup.zip&lt;/code&gt;). At the time of writing this article, the stable version is &lt;strong&gt;&lt;em&gt;1.1.7&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download the .zip file and extract .exe from it and proceed with installation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Installing nodejs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We have done with the installation of nvm. Now we have to install our required node versions. For example, if we need latest node version along with v6.10.2, we have to do:&lt;/p&gt;
&lt;p&gt;For istalling latest nodejs version, run &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;$ nvm install latest&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For istalling specific version of nodejs, run &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;$ nvm install 6.10.2&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;restart your Command Prompt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Usage:&lt;/p&gt;
&lt;p&gt;Now we have both the versions of node installed on to our system. To verify which versions are present, run
&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;$ nvm list&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;which lists down all your versions oresent on your syaytem.&lt;/p&gt;
&lt;p&gt;To switch between versions, just run &lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;$ nvm use &amp;lt;node_version_you_want_to_use&amp;gt;&lt;/code&gt;&lt;/strong&gt;. For eg,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;$ nvm use 10.15.0&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We are now switched to Node v10.15.0. To verify, try running&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;$ node -v&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;that should return you the version we have choosen.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;That’s all folks ! Now we are good to keep rocking with our coding.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; One important thing to remember when we are using nvm, the global space of each node version is different. i.e., if you have some node modules installed globally for one version of node, they won’t be accessible to other versions. You have to install them seperately on those versions too.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Inception]]></title><description><![CDATA[Hello world! Ever since I started learning, there is a huge passion for teaching started growing inside me. I always wanted to teach others…]]></description><link>https://kirankumarambati.me/blog/inception-post/</link><guid isPermaLink="false">https://kirankumarambati.me/blog/inception-post/</guid><pubDate>Mon, 25 Feb 2019 11:31:52 GMT</pubDate><content:encoded>&lt;p&gt;Hello world!&lt;/p&gt;
&lt;p&gt;Ever since I started learning, there is a huge passion for teaching started growing inside me. I always wanted to teach others what I learn. I taught few around me about JS and React but I believe there are still more people who need guidance in approaching new technologies. That gives birth to this blog.&lt;/p&gt;
&lt;p&gt;I always wanted to have a blog but it took me this much time to get the ball rolling due to my busy schedule (or I’m too lazy to get started :p) Anyways finally its here. From now on, whatever I learn, be it a small concept like arrow function or more complex concepts like closures or prototypes, I’m going to share with you.&lt;/p&gt;
&lt;p&gt;(Shhh… I’m going to share with only you. Yeah! Only you. Not to everyone. Lucky you! ;))&lt;/p&gt;
&lt;p&gt;If you would like to read an article on some topic or if you would like to send me some feedback/love, feel free to drop a message to &lt;a href=&quot;mailto:ambatikirankumar4@gmail.com&quot;&gt;me&lt;/a&gt; ! Happy Learning!&lt;/p&gt;</content:encoded></item></channel></rss>